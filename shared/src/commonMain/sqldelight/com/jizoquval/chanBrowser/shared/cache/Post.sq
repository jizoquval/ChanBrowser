import com.jizoquval.chanBrowser.shared.cache.models.Attachment;

CREATE TABLE Post(
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    -- For first post idOnChan == threadId
    idOnChan INTEGER NOT NULL,
    threadId INTEGER NOT NULL,
    title TEXT NOT NULL,
    message TEXT NOT NULL,
    date TEXT NOT NULL,
    timestamp INTEGER NOT NULL,
    isOP INTEGER AS Boolean NOT NULL,
    isSticky INTEGER AS Int NOT NULL,
    authorName TEXT NOT NULL,
    authorEmail TEXT,
    likesCount INTEGER AS Int DEFAULT NULL,
    dislikesCount INTEGER AS Int DEFAULT NULL,
    UNIQUE(idOnChan, threadId),
    FOREIGN KEY(threadId) REFERENCES Thread(id)
        ON DELETE CASCADE
);

updateOrInsert {
    UPDATE Post
    SET title = :title, message = :message, date = :date, timestamp = :timestamp,
        isOP = :isOp, isSticky = :isSticky, authorName = :authorName, authorEmail = :authorEmil,
        likesCount = :likesCount, dislikesCount = :dislikesCount
    WHERE threadId = :threadId AND idOnChan = :idOnChan;

    INSERT OR IGNORE INTO Post(
        idOnChan, threadId, title, message, date, timestamp, isOP, isSticky, authorName, authorEmail,
        likesCount, dislikesCount
    )
    VALUES(:idOnChan, :threadId, :title, :message, :date, :timestamp, :isOp, :isSticky, :authorName,
        :authorEmil, :likesCount, :dislikesCount
    );
}

selectPostsForThread:
SELECT * FROM Post WHERE threadId = ?;

selectPostId:
SELECT id FROM Post WHERE idOnChan = ? AND threadId = ?;

--- Attachments

CREATE TABLE Attachment (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    postId INTEGER NOT NULL,
    type TEXT AS Attachment NOT NULL,
    path TEXT NOT NULL UNIQUE,
    width INTEGER AS Int NOT NULL,
    height INTEGER AS Int NOT NULL,
    isForAdults INTEGER AS Boolean NOT NULL,
    smallAttachmentPath TEXT NOT NULL,
    smallWidth INTEGER AS Int NOT NULL,
    smallHeight INTEGER AS Int NOT NULL,
    FOREIGN KEY(postId) REFERENCES Post(id)
        ON DELETE CASCADE
);

upsertAttachment {
    UPDATE Attachment
    SET type = :type, width = :width, height = :height, isForAdults = :isForAdults,
        smallAttachmentPath = :smallPath, smallWidth = :smallWidth, smallHeight = :smallHeight
    WHERE path = :path;

    INSERT OR IGNORE INTO Attachment(
       postId, type, path, width, height, isForAdults, smallAttachmentPath, smallWidth, smallHeight
    )
    VALUES(:postId, :type, :path, :width, :height, :isForAdults, :smallPath,
          :smallWidth, :smallHeight
    );
}